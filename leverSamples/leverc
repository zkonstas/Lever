#!/bin/bash

if [ -z "$1" ]
	then
    echo "usage: lever <program_name>"
    exit 1
fi

keep=no
for f in "$@"
do
	if [[ $f == "-keep" ]]
	then
		keep=yes
	fi
done

for f in "$@"
do
	if [[ $f == *".lever"*  ]] && [[ -e $f ]]
	#if [[ $f == *".lever"* ]]
	then
		echo Compiling Lever into intermediate code... 
		compilerOutput=$(java -cp "../translator:/usr/local/lib/antlr-4.5-complete.jar" Leverc ../leverSamples/$f 2>&1 >/dev/null)
		
		if [[ $compilerOutput == *"line"*  ]] || [[ $compilerOutput == *"Exception"*  ]] || [[ $compilerOutput == *"error"*  ]]; then
			echo "errors detected:"
			echo "$compilerOutput"
			echo "$f failed to compile"
		else
			echo Compiling and JARing API...
			javac -cp ".:../lib/*" -d ../translator/LeverAPIPackageSourceCode/  ../translator/LeverAPIPackageSourceCode/*.java &>/dev/null
			jar cvf ../lib/LeverAPI-package.jar -C ../translator/LeverAPIPackageSourceCode  LeverAPIPackage &>/dev/null

			progName=${f//.lever/.java} #get java filename out of lever filename
			echo Compiling program...
			moreCompilerOutput=$(javac -cp ".:../lib/*" $progName 2>&1 >/dev/null) #&>/dev/null)
			
			if [[ $moreCompilerOutput == *"line"*  ]] || [[ $compilerOutput == *"Exception"*  ]] || [[ $moreCompilerOutput == *"error"*  ]]; then
				echo "errors detected:"
				echo "$moreCompilerOutput"
				echo "$f failed to compile"
			else
				if [[ $keep == "no" ]]
				then
					echo "Removing intermediate files..."
					rm $progName
				fi

				echo "$f compiled successfully!"
			fi
		fi
	elif [[ $f != "-keep" ]]; then
		echo "file $f not found or not a .lever file"
	fi
done
